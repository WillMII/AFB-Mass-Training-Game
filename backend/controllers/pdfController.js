const db = require("../config/db");
const PDFDocument = require("pdfkit-table");

exports.downloadReport = (req, res) => {
    const { squadron, flight, search, module1Progress, module2Progress, module3Progress, all_modules } = req.query;

    const now = new Date();
    const formattedDate = now.toISOString().split("T")[0]; // YYYY-MM-DD
    const formattedTime = now.toLocaleTimeString("en-US", { hour: '2-digit', minute: '2-digit' });

    let sql = `
        SELECT u.user_id, u.first_name, u.last_name, u.squadron, u.flight,
               MAX(CASE WHEN m.name = 'STINFO' THEN gp.progress ELSE 0 END) AS module1,
               MAX(CASE WHEN m.name = 'Records Management' THEN gp.progress ELSE 0 END) AS module2,
               MAX(CASE WHEN m.name = 'No FEAR Act' THEN gp.progress ELSE 0 END) AS module3
        FROM users u
        LEFT JOIN game_progress gp ON u.user_id = gp.user_id
        LEFT JOIN modules m ON gp.module_id = m.module_id
        WHERE 1=1
    `;

    const queryParams = [];

    if (squadron) {
        sql += " AND u.squadron = ?";
        queryParams.push(squadron);
    }
    if (flight) {
        sql += " AND u.flight = ?";
        queryParams.push(flight);
    }
    if (search) {
        sql += " AND (u.first_name LIKE ? OR u.last_name LIKE ?)";
        queryParams.push(`%${search}%`, `%${search}%`);
    }

    sql += " GROUP BY u.user_id, u.first_name, u.last_name, u.squadron, u.flight";

    let havingConditions = [];
    if (module1Progress) {
        havingConditions.push(`MAX(CASE WHEN m.name = 'STINFO' THEN gp.progress ELSE 0 END) ${module1Progress === "complete" ? '=' : '<'} 100`);
    }
    if (module2Progress) {
        havingConditions.push(`MAX(CASE WHEN m.name = 'Records Management' THEN gp.progress ELSE 0 END) ${module2Progress === "complete" ? '=' : '<'} 100`);
    }
    if (module3Progress) {
        havingConditions.push(`MAX(CASE WHEN m.name = 'No FEAR Act' THEN gp.progress ELSE 0 END) ${module3Progress === "complete" ? '=' : '<'} 100`);
    }
    if (all_modules) {
        const comparator = all_modules === "complete" ? '=' : '<';
        havingConditions.push(
            `MAX(CASE WHEN m.name = 'STINFO' THEN gp.progress ELSE 0 END) ${comparator} 100`,
            `MAX(CASE WHEN m.name = 'Records Management' THEN gp.progress ELSE 0 END) ${comparator} 100`,
            `MAX(CASE WHEN m.name = 'No FEAR Act' THEN gp.progress ELSE 0 END) ${comparator} 100`
        );
    }

    if (havingConditions.length > 0) {
        sql += " HAVING " + havingConditions.join(" AND ");
    }

    db.query(sql, queryParams, (err, results) => {
        if (err) {
            console.error("Database error:", err.sqlMessage || err);
            return res.status(500).json({ error: "Database query failed", details: err.sqlMessage || err });
        }

        //init document
        let doc = new PDFDocument({ margin: 30, size: "A4" });

        // Set headers for download
        res.setHeader("Content-Type", "application/pdf");
        res.setHeader("Content-Disposition", `attachment; filename=training_report_${formattedDate}.pdf`);

        doc.pipe(res);

        // Title with current date/time
        doc.fontSize(16).text("Employee Training Progress Report", { align: "center" });
        doc.moveDown(0.5);
        doc.fontSize(12).text(`Generated on: ${formattedDate} at ${formattedTime}`, { align: "center" });
        // doc.fontSize(12).text(`Generated by: ${user.first_name} ${user.last_name} (${user.email})`, { align: "center" });
        doc.moveDown(1);

        // Display filters used
        doc.fontSize(11).text("Filters Applied:", { underline: true });
        if (squadron) doc.text(`- Squadron: ${squadron}`);
        if (flight) doc.text(`- Flight: ${flight}`);
        if (search) doc.text(`- Name contains: "${search}"`);
        if (module1Progress) doc.text(`- STINFO: ${module1Progress}`);
        if (module2Progress) doc.text(`- Records Management: ${module2Progress}`);
        if (module3Progress) doc.text(`- No FEAR Act: ${module3Progress}`);
        if (all_modules) doc.text(`- All Modules: ${all_modules}`);
        if (!squadron && !flight && !search && !module1Progress && !module2Progress && !module3Progress && !all_modules) {
            doc.text("- No filters (full report)");
        }

        doc.moveDown();

        (async function () {
            const table = {
                headers: [
                    "#",
                    "First Name",
                    "Last Name",
                    "Squadron",
                    "Flight",
                    "STINFO",
                    "Records Management",
                    "No FEAR Act",
                ],
                rows: results.map((user, index) => [
                    index + 1,
                    user.first_name,
                    user.last_name,
                    user.squadron,
                    user.flight,
                    `${user.module1}%`,
                    `${user.module2}%`,
                    `${user.module3}%`,
                ]),
            };

            await doc.table(table, {
                prepareHeader: () => doc.font("Helvetica-Bold").fontSize(10),
                prepareRow: (row, i) => doc.font("Helvetica").fontSize(10),
            });

            doc.end();
        })(); // End of async function

    }); // End of db.query

} // End of downloadReport
